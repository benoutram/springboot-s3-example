buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.avast.gradle:docker-compose-gradle-plugin:0.4.2")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker-compose'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

ext['thymeleaf.version'] = '2.1.5.RELEASE'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.3.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.flywaydb:flyway-core:4.2.0")
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")

    // MariaDB4j
    testCompile('ch.vorburger.mariaDB4j:mariaDB4j:2.2.3')
    testRuntime('org.mariadb.jdbc:mariadb-java-client:2.1.2')
}

def profile = (project.hasProperty('profile') ? project.profile : 'local')

dockerCompose {
    captureContainersOutput = true
    removeContainers = false
}

springBoot {
    executable = true
}

bootRun {
    addResources = true
    systemProperties = [
            'spring.profiles.active': profile
    ]
}